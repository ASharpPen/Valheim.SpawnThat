using BepInEx;
using BepInEx.Configuration;
using System.IO;
using System.Linq;
using SpawnThat.Configuration;
using SpawnThat.Core;
using SpawnThat.Core.Toml;
using System;

namespace SpawnThat.Spawners.WorldSpawner.Configurations.BepInEx;

// TODO: Generate this more dynamically, so we don't just have hardcoded version.
internal static class SimpleConfigPreconfiguration
{
    public static void Initialize()
    {
        if (ConfigurationManager.GeneralConfig?.InitializeWithCreatures?.Value ?? false)
        {
            string configPath = Path.Combine(Paths.ConfigPath, SpawnSystemConfigurationManager.SimpleConfigFile);
            if (!File.Exists(configPath))
            {
                var config = new SimpleConfigurationFile();

                Log.LogDebug($"Initializing {SpawnSystemConfigurationManager.SimpleConfigFile}.");

                CreateEntry(config, "Crow");
                CreateEntry(config, "FireFlies");
                CreateEntry(config, "Deer");
                CreateEntry(config, "Fish1");
                CreateEntry(config, "Fish2");
                CreateEntry(config, "Fish3");
                CreateEntry(config, "Seagal");
                CreateEntry(config, "Leviathan");
                CreateEntry(config, "Boar");
                CreateEntry(config, "Neck");
                CreateEntry(config, "Greyling");
                CreateEntry(config, "Greydwarf");
                CreateEntry(config, "Greydwarf_Elite");
                CreateEntry(config, "Greydwarf_shaman");
                CreateEntry(config, "Troll");
                CreateEntry(config, "Ghost");
                CreateEntry(config, "Skeleton");
                CreateEntry(config, "Skeleton_NoArcher");
                CreateEntry(config, "Skeleton_poison");
                CreateEntry(config, "Blob");
                CreateEntry(config, "BlobElite");
                CreateEntry(config, "Draugr");
                CreateEntry(config, "Draugr_Ranged");
                CreateEntry(config, "Draugr_Elite");
                CreateEntry(config, "Leech");
                CreateEntry(config, "Surtling");
                CreateEntry(config, "Wraith");
                CreateEntry(config, "Wolf");
                CreateEntry(config, "Hatchling");
                CreateEntry(config, "StoneGolem");
                CreateEntry(config, "Fenring");
                CreateEntry(config, "Deathsquito");
                CreateEntry(config, "Lox");
                CreateEntry(config, "Goblin");
                CreateEntry(config, "GoblinArcher");
                CreateEntry(config, "GoblinBrute");
                CreateEntry(config, "GoblinShaman");
                CreateEntry(config, "Serpent");
                CreateEntry(config, "Abomination");

                TomlWriter.WriteToDisk(config, new()
                {
                    AddComments = true,
                    FileName = SpawnSystemConfigurationManager.SimpleConfigFile,
                    FileDescription = $"initialized '{SpawnSystemConfigurationManager.SimpleConfigFile}'",
                    FilePath = Paths.ConfigPath,
                    Header =
                        $"# This file was auto-generated by Spawn That {SpawnThatPlugin.Version} at {DateTimeOffset.UtcNow.ToString("u")}, with Valheim '{Version.m_major}.{Version.m_minor}.{Version.m_patch}'.\n" +
                        $"# The entries listed here is a manually written list of world spawned creatures, and changes only apply to world spawners.\n" +
                        $"# Changes are applied after other Spawn That configs, so be careful not to do things like increase spawns in both world spawner and simple configs\n" +
                        $"# The list only contains the default vanilla spawns, but can be manually expanded to modded creatures too. Just add more sections.\n"
                });

                Log.LogDebug($"Finished initializing {SpawnSystemConfigurationManager.SimpleConfigFile}.");
            }
        }
    }

    private static void CreateEntry(SimpleConfigurationFile file, string prefabName)
    {
        SimpleConfig config = file.GetGenericSubsection(prefabName);

        config.PrefabName.Value = prefabName;

        foreach (var pair in config.GetEntries())
        {
            pair.Value.IsSet = true;
        }
    }
}
